# Cursor Rules for Python Development
# This file configures Cursor to automatically follow Python best practices

## Python Code Style & Linting
- Follow PEP 8 style guide strictly
- Maximum line length: 79 characters
- Use 4 spaces for indentation (no tabs)
- Add type hints to all function parameters and return values
- Use `-> None` for functions that don't return anything
- Remove unused imports (F401)
- Place imports at the top of the file (E402)
- Use 2 blank lines before class definitions and top-level functions
- Use 1 blank line before method definitions
- No trailing whitespace (W291)
- No blank lines with whitespace (W293)
- No blank lines at end of file (W391)

## Import Organization
- Standard library imports first
- Third-party imports second
- Local application imports last
- Each group separated by one blank line
- Alphabetize within each group

## Type Annotations
- Use `typing` module for complex types
- Add `-> None` return type for functions that don't return
- Use proper type hints: `List[str]`, `Dict[str, Any]`, `Optional[str]`
- Avoid `Any` type when possible

## Function Definitions
- Add docstrings to all public functions
- Use descriptive variable names
- Keep functions under 20 lines when possible
- Use early returns to reduce nesting

## Test Functions
- All test methods must have `-> None` return type annotation
- Use descriptive test names that explain the scenario
- Mock external dependencies properly
- Clean up test data after each test

## Code Quality
- Remove unused variables and imports
- Use list comprehensions instead of loops when appropriate
- Prefer `pathlib.Path` over string paths
- Use f-strings for string formatting
- Handle exceptions specifically, not generically

## Auto-fix Commands
- Run `black .` to format code
- Run `flake8 .` to check style
- Run `mypy .` to check types
- Run `isort .` to sort imports

## File Organization
- One class per file when possible
- Group related functions together
- Keep files under 500 lines
- Use meaningful file names
