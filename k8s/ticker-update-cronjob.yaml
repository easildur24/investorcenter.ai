apiVersion: batch/v1
kind: CronJob
metadata:
  name: ticker-update
  namespace: investorcenter
  labels:
    app: ticker-update
    component: data-pipeline
spec:
  # Run daily at 11:00 AM UTC
  schedule: "0 11 * * *"

  # Keep last 3 successful and 1 failed job for debugging
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1

  # Don't start new job if previous is still running
  concurrencyPolicy: Forbid

  jobTemplate:
    metadata:
      labels:
        app: ticker-update
        component: data-pipeline
    spec:
      # Retry failed jobs up to 3 times
      backoffLimit: 3

      # Clean up completed jobs after 1 hour
      ttlSecondsAfterFinished: 3600

      template:
        metadata:
          labels:
            app: ticker-update
            component: data-pipeline
        spec:
          restartPolicy: OnFailure

          containers:
          - name: ticker-updater
            image: 360358043271.dkr.ecr.us-east-1.amazonaws.com/investorcenter/ticker-updater:latest
            imagePullPolicy: IfNotPresent  # Pull from registry in production

            env:
            # Database connection configuration
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "investorcenter_db"
            - name: DB_SSLMODE
              value: "disable"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password

            # Resource limits
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"

            # Logging configuration
            volumeMounts:
            - name: tmp
              mountPath: /tmp

          volumes:
          - name: tmp
            emptyDir: {}

          # Security context
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
