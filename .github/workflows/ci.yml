name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest scripts/us_tickers/tests/ -v --cov=us_tickers --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run linting
      run: |
        flake8 scripts/us_tickers/ scripts/us_tickers/tests/ --max-line-length=79
        mypy scripts/us_tickers/
        black --check scripts/us_tickers/ scripts/us_tickers/tests/ --line-length=79
        isort --check-only scripts/us_tickers/ scripts/us_tickers/tests/ --line-length=79



  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit isort
        # Skip safety due to typer version conflict - will be re-enabled when upstream fixes compatibility

    - name: Run security checks
      run: |
        bandit -r scripts/us_tickers/ --skip B101
        # safety check temporarily disabled due to typer version conflict
        isort --check-only scripts/us_tickers/ scripts/us_tickers/tests/ --line-length=79

  backend-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: cd backend && go mod download

    - name: Run tests
      run: cd backend && go test ./... -v

    - name: Run linting
      run: cd backend && go vet ./...

    - name: Check formatting
      run: |
        cd backend
        unformatted=$(gofmt -l .)
        if [ -n "$unformatted" ]; then
          echo "The following files are not formatted:"
          echo "$unformatted"
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, security, backend-test]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
