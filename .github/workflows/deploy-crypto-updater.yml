name: Deploy Crypto Price Updater

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/coingecko_complete_service.py'
      - 'Dockerfile.crypto-updater'
      - 'k8s/crypto-price-updater-deployment.yaml'
      - 'k8s/redis-deployment.yaml'
      - '.github/workflows/deploy-crypto-updater.yml'
  workflow_dispatch:  # Allow manual trigger

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: investorcenter/crypto-price-updater
  EKS_CLUSTER_NAME: investorcenter-cluster

jobs:
  deploy:
    name: Build and Deploy Crypto Updater
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build Docker image
          docker build -f Dockerfile.crypto-updater -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Push images
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.28.0'

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy Redis (if not exists)
        run: |
          # Check if Redis is already deployed
          if kubectl get deployment redis -n investorcenter >/dev/null 2>&1; then
            echo "✅ Redis already deployed, skipping..."
          else
            echo "📦 Deploying Redis..."
            kubectl apply -f k8s/redis-deployment.yaml
            kubectl wait --for=condition=available --timeout=120s deployment/redis -n investorcenter || true
          fi

      - name: Deploy Crypto Price Updater
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Update image in deployment manifest
          sed -i "s|360358043271.dkr.ecr.us-east-1.amazonaws.com/investorcenter/crypto-price-updater:latest|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/crypto-price-updater-deployment.yaml

          # Apply deployment
          kubectl apply -f k8s/crypto-price-updater-deployment.yaml

          # Wait for rollout
          kubectl rollout status deployment/crypto-price-updater -n investorcenter --timeout=180s

      - name: Update Backend Deployment
        run: |
          # Apply updated backend deployment with Redis env vars
          kubectl apply -f k8s/backend-deployment.yaml

          # Restart backend to pick up new env vars
          kubectl rollout restart deployment/investorcenter-backend -n investorcenter
          kubectl rollout status deployment/investorcenter-backend -n investorcenter --timeout=120s

      - name: Verify Deployment
        run: |
          echo "📊 Checking deployment status..."

          # Check pods
          kubectl get pods -n investorcenter | grep -E "redis|crypto-price-updater" || echo "No pods found yet"

          # Check crypto updater logs
          sleep 30  # Wait for pod to start
          kubectl logs -n investorcenter -l app=crypto-price-updater --tail=20 || echo "No logs yet"

          # Check Redis data (after 60 seconds for first update)
          sleep 30
          CRYPTO_COUNT=$(kubectl exec -n investorcenter deployment/redis -- redis-cli keys "crypto:quote:*" 2>/dev/null | wc -l || echo "0")
          echo "✅ Found $CRYPTO_COUNT cryptocurrencies in Redis"

          if [ "$CRYPTO_COUNT" -gt 0 ]; then
            echo "🎉 Deployment successful!"
          else
            echo "⚠️ No crypto data yet, may still be fetching..."
          fi

      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Image: \`${{ steps.build-image.outputs.image }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Verify deployment:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "kubectl logs -n investorcenter -l app=crypto-price-updater -f" >> $GITHUB_STEP_SUMMARY
          echo "kubectl exec -n investorcenter deployment/redis -- redis-cli keys 'crypto:quote:*'" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
